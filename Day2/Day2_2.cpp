/*
 * PartTwo.cpp
 *
 *  Created on: Dec 3, 2016
 *      Author: tom
 */

#include "Day2_2.h"

#include "Location.h"

#include <cstring>
#include <cassert>

namespace Day2_2
{

class Object
{
public:
	Location_t Location;

	Object()
	{
		Reset();
	}

	void Reset()
	{
		Location.X = 0;
		Location.Y = 2;
	}

	void Move( char dir )
	{
		auto l = Location;

		switch( dir )
		{
		case 'U':
			++l.Y;
			break;
		case 'R':
			++l.X;
			break;
		case 'D':
			--l.Y;
			break;
		case 'L':
			--l.X;
			break;
		}

		if( IsValid( l ) )
			Location = l;
	}

	bool IsValid( const Location_t& l )
	{
		if( l.X < 0 || l.X > 4 || l.Y < 0 || l.Y > 4 )
			return false;

		if( (l.Y == 0 || l.Y == 4) && l.X != 2 )
			return false;

		if( (l.Y == 1 || l.Y == 3) && (l.X == 0 || l.X == 4) )
			return false;

		return true;
	}
};

static void Process( Object* obj, Location_t locations[], const char* movements[], int count );
static void CreateCode( char code[], Location_t locations[], int count );
static char CreateCode( const Location_t& l );

int Day2_Part2( int argc, char* argv[] )
{
	const char* input[] =
		{
			"RLRLLLULULULUUDUULULRDDLURURDDLDUUDDLRDDUUUDDRUDLRRDDUDUUDULUDRDULRUDRULRDRUDLDDULRRDLDRLUDDLLDRDDDUDDLUDUDULDRLLDRLULRLURDLULRUUUDRULLUUDLRDLDDUDRRRLDLRUUURRLDDRRRURLLULDUULLDRLRDLLDURDLDDULLDDLDLUURRRURLRURLLRRDURLDUDDLULUUULULLLDRRRRRLULRDUDURURLULRURRRLLUURDURULRRUULDRDLULDLLUDLUDRLUDLRRLDLLDLDUDDLULLDRULRLRULDURRDLDLLUDRLLDRRDLDUDUURUURDUUDDDLDLDDRDLUDLDUUUUDLDRLRURDLURURDLLLUURURDRDLUDLLRUDULLLDLULLULLDLDDRDRRRUDDDUDDDDRULLLLRLDDLLRDRLLLRRLDRRUDRUUURLLLRULRRDURDLDRLDDUUDUUURRLRRUDLDLDDRUDLULLUUDUUUDLUDDRUULLLURUDDDDLRUDDLLLRUR",
			"LDLRLDDDLUDRDRRUDUURLRULLUDDRLURLUULDLLRLLUDLRLRUDLULRLRRLRURLDDDURUDUUURDRLDDLUUUDRUDUDDDLLURLLULRUULLUDRULUDDULDUDUDULLDRUUUULRDUUDLUDURDLLRLLRLUUDUUDRLLLRULUURUDLDRLLDUDLDDRULDULDURRLDDDUDUDDRUDUDRDURLLLLLULDRDDLLUDULLLUDRURLDLDLDULLDDRURRLUDDRLURLULRLDDDUUUURLRDLRURDDURLDLRRLLRLRLUURRLLDDLDRLRDUDDLLDDDURUUDURLRRDUULRRDDRRUULDRLRUDRRLDDRLDRULLDLDURRULDURRRDLRRLRLLLRLDRLLULRRLLLLLDLDDULDLLDLLDUUDDRLURUUUUULRDDLRDLRDRDRDLUDDLDDRULLUDDRLDLLUDRLUURRLUDURURLLRURRURRLRLLRLURURDDDDRRLURDUULLUU",
			"LLRRDURRDLDULRDUDLRDRDRURULDURUDRRURDDDRLDLDRDRDRDRULDUURLULDDUURUULUDULLDUDLLLLDLLLDRLUUULLULDDRRUDDULLLULRDRULDDULDUDRDDLUUURULDLLUDUUUUURUDLLDRDULLRULLDURDRLLDLDRDDURUULUDURRRUULLDUUDDURDURLDLRRLLDURDDLRRRUDLRRRDLDRLUDLUDRDRLDDLLLRLLRURDLRDUUUURRLULDDLDLLLUDRDRLRRDURDDLURDLDDDULLLRRLDDDRULDDDLRRDULUUUDRRULDDLLLURDRRLLLUULDRRRUURRDDLULDRLULDDDLDULDRRRULRULLURLURULLLLRUDRRRDRDRDLDULURLRRRRLRUDDRRRUURUURLLRURURUURRURRDLDLLUDRRRDUDDRDURLLRLRRULD",
			"DULRRDRLRLUDLLURURLLRLRDLLDLLDRDUURLRUUUDLLDUUDDUULDUULLRUDRURLUDRDLRUDDDLULUDLLDRULULLLDRRULDLLUURLRRRLDRDLDRURRRRDLRUUDULLRLLLDLRUDLDUUDRLDLRDRLRDLDDDUDLRUDLDDLLLDRLLRRUUDRDDUUURURRRUUDLRRDDRUDLDDULULDLRRLRDDUDRUURRUULURLURUDRRURRRULDDDDURDLUUULUULULRDLRRRRRURURRLRUULDUUURRDRRDLDUUUULLULLLLUDLUUDUURRDLDLRRRLUUURULDULDLDRLLURDRUULLLLLULLLDRURURRUDRRRRUDUDUDRUDUDRDRULUUDRURDDUUDLDLDUURUDURLRLRRDRDRDLLDUDDULLRDLDDRLLDLRDURDDULLLDLLLULDLUUUDLDRDLURUURDDLRDLLLLLRLURDLLLULLRRLU",
			"DUULULUUDUDLLRLRURULLDLRRLURDLLDUDUDDRURRLUDULULDRRDRLUULUDDLUURURDLDDDRDRUDURLDDLUDUURULRRUUDRLURRLRLDURRRULRLDDDRUDDDDDUDDULLLRRLLDULDRULUDLRRDLLUDRDLDULRLLLUULLRULRLLLLUDDRRDRLULDLDLURDDRUDDLDLDLDRULDLLDDUUDULUULULLURDURRLLUDRULLRDUDRDRURDRDRDURUUDULDDRURUDLLUUDUUDURDLRDRURUDRUURLUUURLRLUDRUDRUURLLUDRLURDDURRUDRDRLRRLDDDRDDLUUUDDLULDUURUDUDLLDRURDURRDULRLURRDLDDRLUDRLDLRLDDUURRULDDLDUDDLRDULLDDDLDUUUUDLRUDUDLDRDLRDDLDLRLLUDDRRLUDLDUUULLDDRLRRDLRRRRUDDLRLLULRLRDURDUDDRRULLDDLDLRRDLLULDURURDDURLRLULULURRUDUDRDLURULDUDLUULDUUURLLRUDLLRDLRUDRLULDUDRRDUUDUUULUUUDDRUD" };

	Object obj;
	Location_t locations[ 5 ];
	char code[ 5 ];

	Process( &obj, locations, input, 5 );

	CreateCode( code, locations, 5 );

	return 0;
}

int Day2_Part2_Test( void )
{
	const char* input[] = { "ULL", "RRDDD", "LURDL", "UUUUD" };

	Object obj;
	Location_t locations[ 4 ];
	char code[ 4 ];

	Process( &obj, locations, input, 4 );

	CreateCode( code, locations, 4 );

	assert( !strncmp( code, "5DB3", 4 ) );

	return 0;
}

void Process( Object* obj, Location_t locations[], const char* movements[], int count )
{
	for( int i = 0; i < count; ++i ) {
		auto m = movements[ i ];

		int len = strlen( m );
		for( int j = 0; j < len; ++j )
			obj->Move( m[ j ] );

		locations[ i ] = obj->Location;
	}
}

void CreateCode( char code[], Location_t locations[], int count )
{
	for( int i = 0; i < count; ++i )
		code[ i ] = CreateCode( locations[ i ] );
}

char CreateCode( const Location_t& l )
{
	int ix = (5 * l.Y) + l.X;
	if( ix < 0 || ix > 24 )
		return 'n';

	return "nnDnnnABCn56789n234nnn1nn"[ ix ];
}

}
